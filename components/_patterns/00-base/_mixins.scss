/////////////////////
// Mixins

/// Mixin - Set Link Colors & Decoration
/// @param $link
/// @param $hover
/// @param $deco
/// @param $deco--hover
@mixin a-link($link: $links, $hover: $links--hover, $deco: "none", $deco--hover: "underline") {
  &:link,
  &:visited {
    color: $link;
    text-decoration: $deco;
  }
  &:hover,
  &:focus {
    color: $hover;
    background-color: $link;
    box-shadow: 0 0 0 2px $red;
  }
  &:active {
    background-color: $black;
    box-shadow: 0 0 0 2px $black;
  }
}

/// Mixin - Fluid Type.
/// PRECISE CONTROL OVER RESPONSIVE TYPOGRAPHY FOR SASS
/// Indrek Paas @indrekpaas
/// Inspired by Mike Riethmuller's Precise control over responsive typography
/// @link http://madebymike.com.au/writing/precise-control-responsive-typography/
/// @param $properties
/// @param $min-vw
/// @param $max-vw
/// @param $min-value
/// @param $max-value
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
      }
    }

    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

/// Mixin - Strip unit
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

/// Mixin - Center.
/// Center an element vertically or horizontally in its container,
/// and optionally horizontally. Option to undo.
/// @param $horizonally-center - center horizontally
/// @param $vertically-center - center vertically
/// @param $absolute-positioning - position absolutely, rather than relatively
/// @param $undo - undo vertical centering on an element it was previously applied to
@mixin center($horizontally: true, $vertically: true, $absolute: false, $undo: false) {
  display: inline-block;
  @if ($absolute) {
    position: absolute;
  } @else {
    position: relative;
  }
  @if ($horizontally == true and $vertically == true) {
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
  }

  @if ($vertically == true and $horizontally == false) {
    top: 50%;
    transform: translateY(-50%);
  }

  @if ($horizontally == true and $vertically == false) {
    left: 50%;
    transform: translateX(-50%);
  }

  @if ($undo) {
    position: static;
    left: auto;
    transform: none;
  }
}

/// Mixin - Font-Size.
/// Adds px value for fallback - then rem value
/// use example =   @include font-size(1.6); = 1.6rem / 16px

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

/// Mixin - Clearfix.
/// Adds clearfix based on http://bourbon.io/docs/#clearfix
/// use example =   @include cleafix

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

/// Mixin - list-reset
/// Reset list item defaults when no margin, padding, list styles needed

@mixin list-reset {
  list-style: none;
  margin: 0;
  padding: 0;
}

/// Mixin - With Icon
/// Precede Text with SVG icon
@mixin with-icon {
  background-size: cover;
  content: "";
  display: inline-block;
  margin-right: .1em;
  padding: .8em;
}

/// Mixin - Icon with circular bg
/// Mixin for the circular icon-bg (see source/patterns/01-atoms/headings for usage)
@mixin icon-bg($color: $black) {
  background-color: $color;
  border-radius: 20px;
  margin-right: .4em;
}

/// Mixin - Outer container
/// Outer container mixin for large screens
@mixin outer-container {
  margin: 0 auto;
  max-width: 68.5em;
  @include clearfix;
}

/// Mixin - More Link
/// Used in a number of views
@mixin more-link {
  a {
    @include font-size(.9);
    font-weight: 600;
    text-decoration: none;

    &::before {
      content: "»";
      font-size: 1.2rem;
      margin-right: .2em;
    }
  }
}

/// Mixin - Back Link
/// Used in a number of views
@mixin back-link {
  display: block;
  @include font-size(.9);
  font-weight: 600;
  text-decoration: none;

  &::before {
    content: "«";
    font-size: 1.2rem;
    margin-right: .2em;
  }
}

/// Mixin - Body Copy
@mixin body-copy {
  font-family: $body;
  @include font-size(1.6);
  color: $dark-grey;
  font-weight: 300;

  @include medium {
    @include font-size(1.8);
  }
  @include large {
    @include font-size(2);
  }
}
